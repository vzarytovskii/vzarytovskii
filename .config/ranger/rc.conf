set column_ratios 1,3,4
set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$
set show_hidden true
set confirm_on_delete always 
#set preview_script ~/.config/ranger/scope.sh
set use_preview_script true
set automatically_count_files true
set open_all_images true
set vcs_aware false
set vcs_backend_git enabled
set vcs_backend_hg disabled
set vcs_backend_bzr disabled
set vcs_msg_length 50
set preview_images false
set preview_images_method w3m
set unicode_ellipsis true
set show_hidden_bookmarks true
set colorscheme solarized 
set preview_files true
set preview_directories true
set collapse_preview true
set save_console_history true
set status_bar_on_top true
set draw_progress_bar_in_status_bar true
set draw_borders false
set dirname_in_tabs true
set mouse_enabled true
set display_size_in_main_column true
set display_size_in_status_bar true
set display_free_space_in_status_bar true
set display_tags_in_all_columns true
set update_title true
set update_tmux_title true
set shorten_title 3
set hostname_in_titlebar true
set tilde_in_titlebar true
set max_history_size 20
set max_console_history_size 50
set scroll_offset 8
set flushinput true
set padding_right true
set autosave_bookmarks true
set autoupdate_cumulative_size false
set show_cursor false
set sort natural
set sort_reverse false
set sort_case_insensitive true
set sort_directories_first true
set sort_unicode false
set xterm_alt_key false
set cd_bookmarks true
set preview_max_size 0
set show_selection_in_titlebar true
set idle_delay 2000
set metadata_deep_search false
set nested_ranger_warning true
alias e    edit
alias q    quit
alias q!   quitall
alias qa   quitall
alias qall quitall
alias setl setlocal

# ===================================================================
# == Define keys for the browser
# ===================================================================

# Basic
map <C-x><C-c> quit!
map <C-x>k quit

map <C-x>R     reload_cwd
map <C-x><C-r> reset
map <C-l>      redraw_window
map <C-g>      chain abort; change_mode normal; mark_files all=True val=False

map <C-x>i display_file
map <C-h>  help
map <C-x>W display_log
map <C-x>w taskview_open

map <A-x>  console
map <A-!>  console shell%space
map <A-f> chain draw_possible_programs; console open_with%space

# Change the line mode
map <C-x>mf linemode filename
map <C-x>mi linemode fileinfo
map <C-x>mp linemode permissions
map <C-x>mt linemode metatitle

# Tagging / Marking
map <C-x>t<any> tag_toggle tag=%any
map <C-_>t      tag_remove
map <Space>     mark_files toggle=True
map <C-Space>   toggle_visual_mode

# For the nostalgics: Midnight Commander bindings
map <F1> help
map <F3> display_file
map <F4> edit
map <F5> copy
map <F6> cut
map <F7> console mkdir%space
map <F8> console delete
map <F10> exit

# Direction keys
map <UP>       move up=1
map <DOWN>     move down=1
map <LEFT>     move left=1
map <RIGHT>    move right=1
map <HOME>     move to=0
map <END>      move to=-1
map <PAGEDOWN> move down=1   pages=True
map <PAGEUP>   move up=1     pages=True
map <CR>       move right=1
#map <DELETE>   console delete
map <INSERT>   console touch%space

copymap <UP>       <C-p>
copymap <DOWN>     <C-n>
copymap <LEFT>     <C-b>
copymap <RIGHT>    <C-f>
copymap <HOME>     <A-LT>
copymap <END>      <A-GT>
copymap <PAGEDOWN> <A-v>
copymap <PAGEUP>   <C-v>

# Jumping around
map <C-u><C-space> history_go -1
map <A-}> move_parent 1
map <A-{> move_parent -1

map <C-x>gh cd ~
map <C-x>ge cd /etc
map <C-x>gu cd /usr
map <C-x>gd cd /dev
map <C-x>gl cd -r .
map <C-x>gL cd -r %f
map <C-x>go cd /opt
map <C-x>gv cd /var
map <C-x>gm cd /media
map <C-x>gM cd /mnt
map <C-x>gs cd /srv
map <C-x>gr cd /
map <C-x>gR eval fm.cd(ranger.RANGERDIR)
map <C-x>g/ cd /
map <C-x>g? cd /usr/share/doc/ranger

# External Programs
map <C-x><C-f>  edit
map <C-x>du shell -p du --max-depth=1 -h --apparent-size
map <C-x>dU shell -p du --max-depth=1 -h --apparent-size | sort -rh
map <C-x>wp shell -f echo -n %d/%f | xsel -i; xsel -o | xsel -i -b
map <C-x>wd shell -f echo -n %d    | xsel -i; xsel -o | xsel -i -b
map <C-x>wn shell -f echo -n %f    | xsel -i; xsel -o | xsel -i -b

# Filesystem Operations
map <C-x>= chmod

map <A-d>  console rename%space
map <C-e>  eval fm.open_console('rename ' + fm.thisfile.relative_path)
map <C-a>  eval fm.open_console('rename ' + fm.thisfile.relative_path, position=7)

map <C-y>y  paste
map <C-y>o  paste overwrite=True
map <C-y>l  paste_symlink relative=False
map <C-y>L  paste_symlink relative=True
map <C-y>hl paste_hardlink
map <C-y>ht paste_hardlinked_subtree

map <C-w>  cut
map <C-_>w uncut
map <C-x><C-w>a cut mode=add
map <C-x><C-w>r cut mode=remove

map <A-w>  copy
map <C-x><A-w>a copy mode=add
map <C-x><A-w>r copy mode=remove

# Searching
map <C-x>s console search_inc%space
map <C-s> search_next
map <C-r> search_next forward=False

# Tabs
#map <C-n>     tab_new ~
map <C-x>b    tab_move 1
map <A-Right> tab_move 1
map <A-Left>  tab_move -1
map <C-x><C-f> tab_new ~
map <C-_>k    tab_restore
map <a-1>     tab_open 1
map <a-2>     tab_open 2
map <a-3>     tab_open 3
map <a-4>     tab_open 4
map <a-5>     tab_open 5
map <a-6>     tab_open 6
map <a-7>     tab_open 7
map <a-8>     tab_open 8
map <a-9>     tab_open 9


# Sorting
map <C-x>or toggle_option sort_reverse
map <C-x>oz set sort=random
map <C-x>os chain set sort=size;      set sort_reverse=False
map <C-x>ob chain set sort=basename;  set sort_reverse=False
map <C-x>on chain set sort=natural;   set sort_reverse=False
map <C-x>om chain set sort=mtime;     set sort_reverse=False
map <C-x>oc chain set sort=ctime;     set sort_reverse=False
map <C-x>oa chain set sort=atime;     set sort_reverse=False
map <C-x>ot chain set sort=type;      set sort_reverse=False
map <C-x>oe chain set sort=extension; set sort_reverse=False

map <C-x>oS chain set sort=size;      set sort_reverse=True
map <C-x>oB chain set sort=basename;  set sort_reverse=True
map <C-x>oN chain set sort=natural;   set sort_reverse=True
map <C-x>oM chain set sort=mtime;     set sort_reverse=True
map <C-x>oC chain set sort=ctime;     set sort_reverse=True
map <C-x>oA chain set sort=atime;     set sort_reverse=True
map <C-x>oT chain set sort=type;      set sort_reverse=True
map <C-x>oE chain set sort=extension; set sort_reverse=True

map <C-x>dc get_cumulative_size

# Settings
map <C-x>zc    toggle_option collapse_preview
map <C-x>zd    toggle_option sort_directories_first
map <C-x>zh    toggle_option show_hidden
map <C-x>zi    toggle_option flushinput
map <C-x>zm    toggle_option mouse_enabled
map <C-x>zp    toggle_option preview_files
map <C-x>zP    toggle_option preview_directories
map <C-x>zs    toggle_option sort_case_insensitive
map <C-x>zu    toggle_option autoupdate_cumulative_size
map <C-x>zv    toggle_option use_preview_script
map <C-x>zf    console filter%space
map <C-x>nn    narrow

# Bookmarks
map <C-x>rb<any> enter_bookmark %any
map <C-x>rm<any> set_bookmark %any
map <C-x>ru<any> unset_bookmark %any

map <C-x>rb<bg>   draw_bookmarks
copymap <C-x>rb<bg>  <C-x>rm<bg> <C-x>ru<bg>

# Generate all the chmod bindings with some python help:
eval for arg in "rwxXst": cmd("map <C-x>+u{0} shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map <C-x>+g{0} shell -f chmod g+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map <C-x>+o{0} shell -f chmod o+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map <C-x>+a{0} shell -f chmod a+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map <C-x>+{0}  shell -f chmod u+{0} %s".format(arg))

eval for arg in "rwxXst": cmd("map <C-x>-u{0} shell -f chmod u-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map <C-x>-g{0} shell -f chmod g-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map <C-x>-o{0} shell -f chmod o-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map <C-x>-a{0} shell -f chmod a-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map <C-x>-{0}  shell -f chmod u-{0} %s".format(arg))

# Search for letters as you type them
#eval for arg in "abcdefghijklmnopqrstuvwxyz": cmd("map {0} console search_inc {0}".format(arg))

# ===================================================================
# == Define keys for the console
# ===================================================================
# Note: Unmapped keys are passed directly to the console.

# Basic
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <C-g>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()
cmap <C-l>   redraw_window

copycmap <C-g> <esc>
copycmap <CR>  <C-j>

# Move around
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)
cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)

# Line Editing
cmap <backspace>  eval fm.ui.console.delete(-1)
cmap <delete>     eval fm.ui.console.delete(0)
cmap <C-w>        eval fm.ui.console.delete_word()
cmap <C-k>        eval fm.ui.console.delete_rest(1)
cmap <C-u>        eval fm.ui.console.delete_rest(-1)
cmap <C-y>        eval fm.ui.console.paste()

# And of course the emacs way
copycmap <up>        <C-p>
copycmap <down>      <C-n>
copycmap <left>      <C-b>
copycmap <right>     <C-f>
copycmap <home>      <C-a>
copycmap <end>       <C-e>
copycmap <delete>    <C-d>
copycmap <backspace> <C-h>

# Note: There are multiple ways to express backspaces.  <backspace> (code 263)
# and <backspace2> (code 127).  To be sure, use both.
copycmap <backspace> <backspace2>

# This special expression allows typing in numerals:
cmap <allow_quantifiers> false

# ===================================================================
# == Pager Keybindings
# ===================================================================

# Movement
pmap  <down>      pager_move  down=1
pmap  <up>        pager_move  up=1
pmap  <left>      pager_move  left=4
pmap  <right>     pager_move  right=4
pmap  <home>      pager_move  to=0
pmap  <end>       pager_move  to=-1
pmap  <pagedown>  pager_move  down=1.0  pages=True
pmap  <pageup>    pager_move  up=1.0    pages=True

copypmap <UP>       <C-p>
copypmap <DOWN>     <C-n> <CR>
copypmap <LEFT>     <C-b>
copypmap <RIGHT>    <C-f>
copypmap <HOME>     <A-LT>
copypmap <END>      <A-GT>
copypmap <PAGEDOWN> <C-F> <A-v> <Space>
copypmap <PAGEUP>   <C-B> <C-v>

# Basic
pmap     <C-l> redraw_window
pmap     <C-g> pager_close
copypmap <C-g> q Q i <F3>
pmap E      edit_file

# ===================================================================
# == Taskview Keybindings
# ===================================================================

# Movement
tmap <up>        taskview_move up=1
tmap <down>      taskview_move down=1
tmap <home>      taskview_move to=0
tmap <end>       taskview_move to=-1
tmap <pagedown>  taskview_move down=1.0  pages=True
tmap <pageup>    taskview_move up=1.0    pages=True
tmap <C-d>       taskview_move down=0.5  pages=True
tmap <C-u>       taskview_move up=0.5    pages=True

copytmap <UP>       k  <C-p>
copytmap <DOWN>     j  <C-n> <CR>
copytmap <HOME>     g
copytmap <END>      G
copytmap <C-u>      u
copytmap <PAGEDOWN> n  f  <C-F>  <Space>
copytmap <PAGEUP>   p  b  <C-B>

# Changing priority and deleting tasks
tmap <A-n>      eval -q fm.ui.taskview.task_move(-1)
tmap <A-p>      eval -q fm.ui.taskview.task_move(0)
tmap <C-d>      eval -q fm.ui.taskview.task_remove()
tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
tmap <delete>   eval -q fm.ui.taskview.task_remove()

# Basic
tmap <C-l> redraw_window
tmap <C-g> taskview_close
